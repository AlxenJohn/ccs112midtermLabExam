{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Labexam1\\\\ccs112midtermLabExam\\\\frontend\\\\src\\\\components\\\\BookForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Form, Button, Message } from 'semantic-ui-react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookForm = ({\n  initialData = {},\n  isEditMode = false\n}) => {\n  _s();\n  const [title, setTitle] = useState(initialData.title || '');\n  const [author, setAuthor] = useState(initialData.author || '');\n  const [description, setDescription] = useState(initialData.description || '');\n  const [publishedYear, setPublishedYear] = useState(initialData.published_year || '');\n  const [genre, setGenre] = useState(initialData.genre || '');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  useEffect(() => {\n    if (initialData) {\n      setTitle(initialData.title || '');\n      setAuthor(initialData.author || '');\n      setDescription(initialData.description || '');\n      setPublishedYear(initialData.published_year || '');\n      setGenre(initialData.genre || '');\n    }\n  }, [initialData]);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const bookData = {\n      title,\n      author,\n      description,\n      published_year: publishedYear,\n      genre\n    };\n    try {\n      if (isEditMode) {\n        await axios.put(`http://127.0.0.1:8000/api/books/${initialData.id}`, bookData);\n        setSuccessMessage('Book updated successfully!');\n      } else {\n        await axios.post('http://127.0.0.1:8000/api/books', bookData);\n        setSuccessMessage('Book created successfully!');\n      }\n      setErrorMessage('');\n    } catch (error) {\n      console.error('Error submitting form:', error);\n      setErrorMessage('Error saving book.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [successMessage && /*#__PURE__*/_jsxDEV(Message, {\n      success: true,\n      children: /*#__PURE__*/_jsxDEV(Message.Header, {\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(Message, {\n      error: true,\n      children: /*#__PURE__*/_jsxDEV(Message.Header, {\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Book Title\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Author\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Author Name\",\n          value: author,\n          onChange: e => setAuthor(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Book Description\",\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Published Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"e.g., 2023\",\n          value: publishedYear,\n          onChange: e => setPublishedYear(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Genre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Book Genre\",\n          value: genre,\n          onChange: e => setGenre(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        primary: true,\n        children: isEditMode ? 'Update Book' : 'Create Book'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(BookForm, \"32TqcPJVDYbi/ZKI82pxJZbcudM=\");\n_c = BookForm;\nexport default BookForm;\nvar _c;\n$RefreshReg$(_c, \"BookForm\");","map":{"version":3,"names":["React","useState","useEffect","Form","Button","Message","axios","jsxDEV","_jsxDEV","BookForm","initialData","isEditMode","_s","title","setTitle","author","setAuthor","description","setDescription","publishedYear","setPublishedYear","published_year","genre","setGenre","successMessage","setSuccessMessage","errorMessage","setErrorMessage","handleSubmit","event","preventDefault","bookData","put","id","post","error","console","className","children","success","Header","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Field","type","placeholder","value","onChange","e","target","required","primary","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/Labexam1/ccs112midtermLabExam/frontend/src/components/BookForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Message } from 'semantic-ui-react';\r\nimport axios from 'axios';\r\n\r\nconst BookForm = ({ initialData = {}, isEditMode = false }) => {\r\n    const [title, setTitle] = useState(initialData.title || '');\r\n    const [author, setAuthor] = useState(initialData.author || '');\r\n    const [description, setDescription] = useState(initialData.description || '');\r\n    const [publishedYear, setPublishedYear] = useState(initialData.published_year || '');\r\n    const [genre, setGenre] = useState(initialData.genre || '');\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (initialData) {\r\n            setTitle(initialData.title || '');\r\n            setAuthor(initialData.author || '');\r\n            setDescription(initialData.description || '');\r\n            setPublishedYear(initialData.published_year || '');\r\n            setGenre(initialData.genre || '');\r\n        }\r\n    }, [initialData]);\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const bookData = {\r\n            title,\r\n            author,\r\n            description,\r\n            published_year: publishedYear,\r\n            genre,\r\n        };\r\n\r\n        try {\r\n            if (isEditMode) {\r\n                await axios.put(`http://127.0.0.1:8000/api/books/${initialData.id}`, bookData);\r\n                setSuccessMessage('Book updated successfully!');\r\n            } else {\r\n                await axios.post('http://127.0.0.1:8000/api/books', bookData);\r\n                setSuccessMessage('Book created successfully!');\r\n            }\r\n            setErrorMessage('');\r\n        } catch (error) {\r\n            console.error('Error submitting form:', error);\r\n            setErrorMessage('Error saving book.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            {successMessage && (\r\n                <Message success>\r\n                    <Message.Header>{successMessage}</Message.Header>\r\n                </Message>\r\n            )}\r\n            {errorMessage && (\r\n                <Message error>\r\n                    <Message.Header>{errorMessage}</Message.Header>\r\n                </Message>\r\n            )}\r\n\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Field>\r\n                    <label>Title</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Book Title\"\r\n                        value={title}\r\n                        onChange={(e) => setTitle(e.target.value)}\r\n                        required\r\n                    />\r\n                </Form.Field>\r\n                \r\n                <Form.Field>\r\n                    <label>Author</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Author Name\"\r\n                        value={author}\r\n                        onChange={(e) => setAuthor(e.target.value)}\r\n                        required\r\n                    />\r\n                </Form.Field>\r\n                \r\n                <Form.Field>\r\n                    <label>Description</label>\r\n                    <textarea\r\n                        placeholder=\"Book Description\"\r\n                        value={description}\r\n                        onChange={(e) => setDescription(e.target.value)}\r\n                        required\r\n                    />\r\n                </Form.Field>\r\n                \r\n                <Form.Field>\r\n                    <label>Published Year</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder=\"e.g., 2023\"\r\n                        value={publishedYear}\r\n                        onChange={(e) => setPublishedYear(e.target.value)}\r\n                        required\r\n                    />\r\n                </Form.Field>\r\n                \r\n                <Form.Field>\r\n                    <label>Genre</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Book Genre\"\r\n                        value={genre}\r\n                        onChange={(e) => setGenre(e.target.value)}\r\n                        required\r\n                    />\r\n                </Form.Field>\r\n                \r\n                <Button type=\"submit\" primary>\r\n                    {isEditMode ? 'Update Book' : 'Create Book'}\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BookForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}