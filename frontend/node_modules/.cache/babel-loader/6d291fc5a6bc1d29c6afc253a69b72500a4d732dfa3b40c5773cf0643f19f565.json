{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Labexam1\\\\ccs112midtermLabExam\\\\frontend\\\\src\\\\components\\\\BookForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Form, Button, Header, Message } from 'semantic-ui-react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookForm = () => {\n  _s();\n  // Form data states\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [description, setDescription] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  // Handle form submission\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    // Prepare book data for submission\n    const bookData = {\n      title,\n      author,\n      description\n    };\n    try {\n      const response = await axios.post('http://127.0.0.1:8000/api/books', bookData, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // If successful, display a success message and clear the form\n      console.log('Book added:', response.data);\n      setSuccessMessage('Book successfully added!');\n      setTitle('');\n      setAuthor('');\n      setDescription('');\n      setErrorMessage(''); // Clear previous errors\n    } catch (error) {\n      console.error('Error adding book:', error);\n\n      // Set error message based on server response\n      if (error.response && error.response.data) {\n        const validationErrors = Object.values(error.response.data.errors || {}).flat();\n        setErrorMessage(validationErrors.join(', '));\n      } else {\n        setErrorMessage('Failed to add book. Please try again.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      as: \"h2\",\n      children: \"Add a New Book\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(Message, {\n      success: true,\n      children: /*#__PURE__*/_jsxDEV(Message.Header, {\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(Message, {\n      error: true,\n      children: /*#__PURE__*/_jsxDEV(Message.Header, {\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Book Title\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Author\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Author Name\",\n          value: author,\n          onChange: e => setAuthor(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Book Description\",\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        primary: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(BookForm, \"jcIk/fVxmiuoPk0TWhZQwpOt048=\");\n_c = BookForm;\nexport default BookForm;\nvar _c;\n$RefreshReg$(_c, \"BookForm\");","map":{"version":3,"names":["React","useState","Form","Button","Header","Message","axios","jsxDEV","_jsxDEV","BookForm","_s","title","setTitle","author","setAuthor","description","setDescription","successMessage","setSuccessMessage","errorMessage","setErrorMessage","handleSubmit","event","preventDefault","bookData","response","post","headers","console","log","data","error","validationErrors","Object","values","errors","flat","join","className","children","as","fileName","_jsxFileName","lineNumber","columnNumber","success","onSubmit","Field","type","placeholder","value","onChange","e","target","required","primary","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/Labexam1/ccs112midtermLabExam/frontend/src/components/BookForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Form, Button, Header, Message } from 'semantic-ui-react';\r\nimport axios from 'axios';\r\n\r\nconst BookForm = () => {\r\n    // Form data states\r\n    const [title, setTitle] = useState('');\r\n    const [author, setAuthor] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    // Handle form submission\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        // Prepare book data for submission\r\n        const bookData = {\r\n            title,\r\n            author,\r\n            description,\r\n        };\r\n\r\n        try {\r\n            const response = await axios.post('http://127.0.0.1:8000/api/books', bookData, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            });\r\n\r\n            // If successful, display a success message and clear the form\r\n            console.log('Book added:', response.data);\r\n            setSuccessMessage('Book successfully added!');\r\n            setTitle('');\r\n            setAuthor('');\r\n            setDescription('');\r\n            setErrorMessage(''); // Clear previous errors\r\n        } catch (error) {\r\n            console.error('Error adding book:', error);\r\n\r\n            // Set error message based on server response\r\n            if (error.response && error.response.data) {\r\n                const validationErrors = Object.values(error.response.data.errors || {}).flat();\r\n                setErrorMessage(validationErrors.join(', '));\r\n            } else {\r\n                setErrorMessage('Failed to add book. Please try again.');\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <Header as=\"h2\">Add a New Book</Header>\r\n            \r\n            {successMessage && (\r\n                <Message success>\r\n                    <Message.Header>{successMessage}</Message.Header>\r\n                </Message>\r\n            )}\r\n            {errorMessage && (\r\n                <Message error>\r\n                    <Message.Header>{errorMessage}</Message.Header>\r\n                </Message>\r\n            )}\r\n            \r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Field>\r\n                    <label>Title</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Book Title\"\r\n                        value={title}\r\n                        onChange={(e) => setTitle(e.target.value)}\r\n                        required\r\n                    />\r\n                </Form.Field>\r\n                \r\n                <Form.Field>\r\n                    <label>Author</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Author Name\"\r\n                        value={author}\r\n                        onChange={(e) => setAuthor(e.target.value)}\r\n                        required\r\n                    />\r\n                </Form.Field>\r\n                \r\n                <Form.Field>\r\n                    <label>Description</label>\r\n                    <textarea\r\n                        placeholder=\"Book Description\"\r\n                        value={description}\r\n                        onChange={(e) => setDescription(e.target.value)}\r\n                        required\r\n                    />\r\n                </Form.Field>\r\n                \r\n                <Button type=\"submit\" primary>\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BookForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}